

// pipeline {
//     agent any

//     stages {
//         stage('List Installed Software') {
//             steps {
//                 sh '''
//                     echo "Listing installed software..."
//                     if [ -x "$(command -v dpkg)" ]; then
//                         dpkg --get-selections
//                     elif [ -x "$(command -v rpm)" ]; then
//                         rpm -qa
//                     else
//                         echo "Package manager not found. Try listing from /usr/bin or /opt."
//                         ls /usr/bin
//                     fi
//                 '''
//             }
//         }
//     }
// }



pipeline {
  agent any

  parameters {
    booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    choice(name: 'action', choices: ['apply', 'destroy'], description: 'Select the action to perform')
  }

  environment {
    AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    AWS_DEFAULT_REGION    = 'ap-south-1'
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Danuu2345/Terraform-Modules.git'
      }
    }

    stage('Terraform init') {
      steps {
        sh 'terraform init'
      }
    }

    stage('Plan') {
      steps {
        sh 'terraform plan -out tfplan'
        sh 'terraform show -no-color tfplan > tfplan.txt'
      }
    }

    stage('Apply / Destroy') {
      steps {
        script {
          if (params.action == 'apply') {
            if (!params.autoApprove) {
              def plan = readFile 'tfplan.txt'
              input message: "Do you want to apply the plan?",
              parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
            }
            sh "terraform ${params.action} -input=false tfplan"
          } else if (params.action == 'destroy') {
            sh "terraform ${params.action} --auto-approve"
          } else {
            error "Invalid action selected. Please choose either 'apply' or 'destroy'."
          }
        }
      }
    }
  }
}